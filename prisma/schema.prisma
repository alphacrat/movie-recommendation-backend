generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  searches    SearchHistory[]
  clicks      ClickTrack[]
  savedMovies SavedMovie[]
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  genre       String[]
  releaseYear Int
  rating      Float
  popularity  Float    @default(0)
  keywords    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  searches SearchHistory[]
  clicks   ClickTrack[]
  savedBy  SavedMovie[]
}

model SearchHistory {
  id         Int      @id @default(autoincrement())
  userId     Int
  movieId    Int
  searchTerm String
  timestamp  DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  movie Movie @relation(fields: [movieId], references: [id])

  @@index([userId, timestamp])
}

model ClickTrack {
  id        Int      @id @default(autoincrement())
  userId    Int
  movieId   Int
  timestamp DateTime @default(now())
  duration  Int

  user  User  @relation(fields: [userId], references: [id])
  movie Movie @relation(fields: [movieId], references: [id])

  @@index([userId, movieId])
}

model SavedMovie {
  id        Int      @id @default(autoincrement())
  userId    Int
  movieId   Int
  timestamp DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  movie Movie @relation(fields: [movieId], references: [id])

  @@unique([userId, movieId])
  @@index([userId, timestamp])
}
